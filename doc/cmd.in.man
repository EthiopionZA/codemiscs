.\" It was originally generated by help2man 1.36.
.TH CMD "1" "[@]pkgmonth[@] [@]pkgyear[@]" "cmd [@]pkgversion[@]" "User Commands"
.SH NAME
cmd \- [@]pkgdescription[@]
.SH SYNOPSIS
.B cmd
[\fIOPTIONS\fR]
.B --
[\fISUBARGS\fR]
.TP
Example: cmd -- -h
.SH DESCRIPTION
.PP
.B command
is a command wrapper.
.B cmd
wraps bash functions into a command, automatizing the handling of options of a command and includes 
.B --help
,
.B --version
and
.B --man
options.
.PP
Mandatory arguments for long options are mandatory for short options too.
.TP
\fB\-c\fR, \fB\-\-cmd\fR=\fICMD\fR
set the cmd field
.TP
\fB\-n\fR, \fB\-\-cmdname\fR=\fINAME\fR
set the name field
.TP
\fB\-d\fR, \fB\-\-cmddescription\fR=\fIDESCRIPTION\fR
set the description field
.TP
\fB\-x\fR, \fB\-\-cmdexplanation\fR=\fIEXPLANATION\fR
set the explanation field
.TP
\fB\-r\fR, \fB\-\-cmdversion\fR=\fIVERSION\fR
set the version field
.TP
\fB\-a\fR, \fB\-\-cmdauthor\fR=\fIAUTHOR\fR
set the author field
.TP
\fB\-t\fR, \fB\-\-cmdmonth\fR=\fIMONTH\fR
set the month field
.TP
\fB\-y\fR, \fB\-\-cmdyear\fR=\fIYEAR\fR
set the year field
.TP
\fB\-b\fR, \fB\-\-cmdbugreport\fR=\fIBUGREPORT\fR
set the bugreport field
.TP
\fB\-p\fR, \fB\-\-cmdhomepage\fR=\fIHOMEPAGE\fR
set the homepage  field
.TP
\fB\-u\fR, \fB\-\-cmdusage\fR=\fIUSAGE\fR
set the usage field
.TP
\fB\-e\fR, \fB\-\-cmdexample\fR=\fIEXAMPLE\fR
add an  example field (first for usage)
.TP
\fB\-o\fR, \fB\-\-cmdoption\fR=\fIOPTION\fR
add an option field
.TP
\fB\-l\fR, \fB\-\-cmdextrahelp\fR=\fIEXTRAHELP\fR
set the extrahelp field
.TP
\fB\-s\fR, \fB\-\-cmdextranotes\fR=\fIEXTRANOTES\fR
set the extranotes field
.TP
\fB\-i\fR, \fB\-\-cmdinit\fR=\fIINIT\fR
set the init field
.TP
\fB\-m\fR, \fB\-\-cmdmain\fR=\fIMAIN\fR
set the main field
.TP
\fB\-h\fR, \fB\-\-help\fR
show a help message
.TP
\fB\-v\fR, \fB\-\-version\fR
show the program version
.TP
\fB\-m\fR, \fB\-\-man\fR
show a man page
.TP
All fields are mandatory except bugreport, homepage, extrahelp and extranotes, which can be empty.
.TP
Execute 'bash -c "man <(cmd --man)"' to see the runtime manpage.
.SH "EXAMPLES"
.TP
\fB1: testcmd and testcmdsh
.TP
See testcmdsh and testcmd full example commands for usage.
.TP
\fB2: testfly:
.TP
Here is an interesting topic, commands alike on the fly that doesn't even exist, here is testfly:
.nf
$ function test_test { echo "testtest"; }
$ function test_testarg { echo "testarg <$1>"; }
$ function test_testopt { if [[ ! -z "$1" ]]; then echo "testopt <$1>"; else echo "testopt"; fi; }
$ function test_init { echo "testinit <$@>"; }
$ function test_main { echo "testmain <$@>"; }
$ export -f test_test test_testarg test_testopt test_init test_main
$ function testfly { cmd --cmd "testfly" --cmdname "test fly" --cmddescription "test fly" --cmdexplanation "tests cmd on the fly" --cmdversion "[@]pkgversion[@]" --cmdauthor "Test Author" --cmdmonth "[@]pkgmonth[@]" --cmdyear "[@]pkgyear[@]" --cmdbugreport "test@server.tld" --cmdhomepage "http://test.homepage.tld" --cmdusage "test [OPTIONS]" --cmdexample "test" --cmdoption "/t/test/show a test message/test_test/" --cmdoption "/a:/testarg:/show a test message with argument/test_testarg/ARG/" --cmdoption "/o::/testopt::/show a test message with optional argument/test_testopt/ARG/" --cmdextrahelp "You can play with option argument passing." --cmdextranotes "For more information, check package documentation." --cmdinit "test_init" --cmdmain "test_main" -- "$@"; }

 let's try it:

$ testfly --help
testinit <--help>
Usage: test [OPTIONS]
test fly
Example: test

tests cmd on the fly

Mandatory arguments for long options are mandatory for short options too.
  -t, --test                                    show a test message
  -a, --testarg=ARG                             show a test message with argument
  -o, --testopt[=ARG]                           show a test message with optional argument
  -h, --help                                    show a help message
  -v, --version                                 show the program version
  -m, --man                                     show a man page
You can play with option argument passing.
Execute 'bash -c "man <(test --man)"' to see the runtime manpage.

Report bugs to <test@server.tld>.
testfly (test fly) home page <http://test.homepage.tld>.
For more information, check package documentation.

$ testfly --version
testinit <--version>
[@]pkgversion[@]

$ testfly --test --testarg arg --testopt --testopt=arg a b c
testinit <--test --testarg arg --testopt --testopt=arg a b c>
testtest
testarg <arg>
testopt
testopt <arg>
testmain <a b c>

$ man <(tesfly -m)
.fi
.TP
Note that testfly is nowhere in your disk. Of course you should quiet your init.
.SH NOTES
You can opt to install the package and source
.B ${prefix}/cmd/cmd.sh
or distribute
.B cmd.sh
with your package and source it internally, alternatively you can use the
.B cmd
command itself.

cmd.sh is actually a little faster than cmd, but it is not exponentially, just there is some processing performed from cmd to do option handling instead of direct assignments like cmd.sh. On a bigger project performance would be unnoticeable.

See testcmdsh and testcmd full example commands for usage. For practical usage see mkproject < http://code.google.com/p/makeproject >, tw < http://code.google.com/p/translateword > and rf < http://code.google.com/p/readfeed >.
.SH AUTHOR
Written by [@]pkgauthor[@].
.SH HOMEPAGE
cmd (command) home page <[@]pkghomepage[@]>.
.SH REPORTING BUGS
Report bugs to <[@]pkgbugreport[@]>.
.SH COPYRIGHT
Copyright \(co [@]pkgyear[@] [@]pkgauthor[@]
.br
This is free software.  You may redistribute copies of it under the terms of
the GNU General Public License <http://www.gnu.org/licenses/gpl.html>.
There is NO WARRANTY, to the extent permitted by law.
